{
	"title": "A JSON Schema for Swagger 2.0 API.",
	"id": "http://swagger.io/v2/schema.json#/definitions/nonBodyParameter",
	"$schema": "http://json-schema.org/draft-04/schema#",
	"type": "object",
	"required": [
		"name",
		"in",
		"type"
	],
	"additionalProperties": false,
	"patternProperties": {
		"^x-": {
			"$ref": "#/definitions/vendorExtension"
		}
	},
	"x-swadit-editor-grid": [
		[ "name", "in", "required" ],
		[ "type", "format" ],
		[ "description" ]
	],
	"x-swadit-editor-grid-cols": {
		"name": 5, "in": 5, "required": 2,
		"type": 6, "format": 6,
		"description": 12
	},
	"properties": {
		"name": {
			"type": "string",
			"description": "The name of the parameter."
		},
		"in": {
			"type": "string",
			"description": "Determines the location of the parameter.",
			"enum": [
				"path",
				"query",
				"header",
				"body",
				"formData"
			]
		},
		"description": {
			"type": "string",
			"description": "A brief description of the parameter. This could contain examples of use.  GitHub Flavored Markdown is allowed.",
			"x-swadit-markdown": true,
			"x-swadit-input-multiline": 4,
			"x-swadit-input-class": "monospace"
		},
		"required": {
			"type": "boolean",
			"description": "Determines whether or not this parameter is required or optional.",
			"default": false
		},
		"type": {
			"type": "string",
			"enum": [
				"string",
				"number",
				"integer",
				"boolean",
				"array",
				"file"
			]
		},
		"format": {
			"type": "string",
			"description": "Format of type (optional). Examples: \ninteger: int32, int64 \nnumber: float, double \nstring: byte, binary, date, date-time, password"
		},
		"items": {
			"$ref": "#/definitions/primitivesItems",
			"x-swadit-swagger-schema": true
		},
		"collectionFormat": {
			"$ref": "#/definitions/collectionFormat"
		},
		"default": {
			"$ref": "#/definitions/default"
		},
		"maximum": {
			"$ref": "#/definitions/maximum"
		},
		"exclusiveMaximum": {
			"$ref": "#/definitions/exclusiveMaximum"
		},
		"minimum": {
			"$ref": "#/definitions/minimum"
		},
		"exclusiveMinimum": {
			"$ref": "#/definitions/exclusiveMinimum"
		},
		"maxLength": {
			"$ref": "#/definitions/maxLength"
		},
		"minLength": {
			"$ref": "#/definitions/minLength"
		},
		"pattern": {
			"$ref": "#/definitions/pattern"
		},
		"maxItems": {
			"$ref": "#/definitions/maxItems"
		},
		"minItems": {
			"$ref": "#/definitions/minItems"
		},
		"uniqueItems": {
			"$ref": "#/definitions/uniqueItems"
		},
		"enum": {
			"$ref": "#/definitions/enum"
		},
		"multipleOf": {
			"$ref": "#/definitions/multipleOf"
		}
	}
}